%YAML 1.2
---
name: Python (for LSP)
scope: source.python.lsp
hidden: true
file_extensions:
  - pyright-syntax-test

extends: Packages/Python/Python.sublime-syntax

contexts:
  main:
    - meta_include_prototype: false
    - include: comments
    - include: lsp-line
    - include: statements

  lsp-line:
    - match: (?=^\()
      push: lsp-type

  lsp-type:
    - meta_include_prototype: false
    - match: \(
      scope: punctuation.section.parens.begin.python
      set: [lsp-statement, lsp-type-body]
    - match: (?=\S)
      pop: true

  lsp-type-body:
    - meta_scope: meta.parens.python
    - meta_content_scope: storage.type.python
    - match: \)
      scope: punctuation.section.parens.end.python
      pop: true

  lsp-statement:
    - include: pop-end
    # (function) or (method) hover popup
    - match: (?=:\s*(?:Overload\[)?\()
      set:
        - include: pop-end
        - match: (Overload)(\[)
          captures:
            1: meta.qualified-name.python meta.generic-name.python
            2: punctuation.section.sequence.begin.python
        # union of (function) or (method)
        - match: \((?=\()
          scope: punctuation.section.parameters.begin.python
          push: lsp-function-parameters
        - match: \|
          scope: keyword.operator.arithmetic.python
        - include: lsp-function-parameters
    # general cases
    - include: statements

  lsp-function-parameters:
    - match: \(
      scope: meta.function.parameters.python punctuation.section.parameters.begin.python
      set: [function-parameters, allow-unpack-operators]

  function-terminator:
    # match trailing ending brackets in LSP popup
    - match: \)
      scope: punctuation.section.parameters.end.python
      pop: true
    - match: \]
      scope: punctuation.section.sequence.end.python
      pop: true
    # if ST 4, we can just use "meta_prepend" to replace the followings...
    # - meta_prepend: true
    - match: ':'
      scope: meta.function.python punctuation.section.function.begin.python
      pop: true
    - include: line-continuation-or-pop

  pop-end:
    - match: $
      pop: true
